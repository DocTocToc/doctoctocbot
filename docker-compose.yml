version: '3'

services:
  django:
    restart: always
    env_file:
      - .env
    image: doctocnet_docker_img
    build: .
    command: bash -c "python manage.py migrate --noinput && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./src:/code/src
      - /var/cache/doctoctocbot/development/staticfiles:/var/cache/doctoctocbot/development/staticfiles
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${celery_base_dir}:${celery_base_dir}
    links:
      - redis:redis
    depends_on:
      - redis
      - celery_celery_worker
    ports:
      - "8007:8000"
    working_dir: /code/src
  redis:
    restart: always
    image: redis:latest
    expose:
      - "6379"
  celery_retweet_worker:
    restart: always
    env_file:
      - .env
    image: doctocnet_docker_img
    command: bash -c "celery --app=${CELERY_APP} worker -Q retweet --concurrency=2 -n retweet_worker@%n --loglevel=${CELERYD_LOG_LEVEL}"
    volumes:
      - .:/code
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
    links:
      - redis
    working_dir: /code/src
  celery_tree_worker:
    restart: always
    env_file:
      - .env
    image: doctocnet_docker_img
    command: bash -c "celery --app=${CELERY_APP} worker -Q tree --concurrency=2 -n tree_worker2@%n --loglevel=${CELERYD_LOG_LEVEL} --logfile=${CELERYD_LOG_FILE}"
    volumes:
      - .:/code
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
    links:
      - redis
    working_dir: /code/src
  celery_celery_worker:
    restart: on-failure
    env_file:
      - .env
    image: doctocnet_docker_img
    command: bash -c "celery --app=${CELERY_APP} worker -Q celery --concurrency=2 -n celery_worker2@%n --loglevel=${CELERYD_LOG_LEVEL} --logfile=${CELERYD_LOG_FILE}"
    volumes:
      - .:/code
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
    links:
      - redis
    working_dir: /code/src
  celery-beat:
    restart: always
    env_file:
      - .env
    image: doctocnet_docker_img
    command: celery -A ${PROJECT} beat -l debug --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    depends_on:
      - redis
      - celery_retweet_worker
      - celery_tree_worker
      - celery_celery_worker
    links:
      - redis
    working_dir: /code/src
  stream:
    restart: always
    env_file:
      - .env
    build: .
    command: bash -c "python manage.py run_bot_stream --settings=settings"
    volumes:
      - ./src:/code/src
    links:
      - redis:redis
    working_dir: /code/src