version: '3.7'

services:
          
  database:
    restart: always                                                                       
    image: postgres:10.10
    command: postgres -c config_file=/etc/postgresql.conf                                                     
    volumes:                                                                    
      - "${DATABASE_DATA_DIR}:/var/lib/postgresql/data"
      - "${DATABASE_CONF_FILE}:/etc/postgresql.conf"
      - "${DATABASE_BACKUP_DIR}:/backup"
  redis:
    restart: always
    image: redis:latest
    sysctls:
      net.core.somaxconn: 1024
  celery_retweet_worker:
    restart: always
    env_file:
      - .env
    command: bash -c "celery --app=${CELERY_APP} worker -Q retweet --concurrency=${CELERY_WORKER_CONCURRENCY} -n retweet_worker@%n --loglevel=${CELERYD_LOG_LEVEL} --logfile=${CELERYD_LOG_FILE}"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
    working_dir: /code/src
  celery_tree_worker:
    restart: always
    env_file:
      - .env
    command: bash -c "celery --app=${CELERY_APP} worker -Q tree --concurrency=${CELERY_WORKER_CONCURRENCY} -n tree_worker@%n --loglevel=${CELERYD_LOG_LEVEL} --logfile=${CELERYD_LOG_FILE} --time-limit=${CELERY_TREE_SOFT_TIME_LIMIT}"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
    links:
      - redis
    working_dir: /code/src
  celery_celery_worker:
    restart: always
    env_file:
      - .env
    command: bash -c "celery --app=${CELERY_APP} worker -Q celery --concurrency=${CELERY_WORKER_CONCURRENCY} -n celery_worker@%n --loglevel=${CELERYD_LOG_LEVEL} --logfile=${CELERYD_LOG_FILE}"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
    links:
      - redis
    working_dir: /code/src
  celery-beat:
    restart: always
    env_file:
      - .env
    command: celery -A ${PROJECT} beat -l debug --scheduler django_celery_beat.schedulers:DatabaseScheduler --pidfile=
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - database
      - redis
      - celery_retweet_worker
      - celery_tree_worker
      - celery_celery_worker
    working_dir: /code/src
  stream_1:
    env_file:
      - .env
    command: bash -c "python manage.py run_bot_stream $STREAM_1 --settings=settings"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
      - database
      - celery_retweet_worker
    working_dir: /code/src
  stream_2:
    env_file:
      - .env
    command: bash -c "python manage.py run_bot_stream $STREAM_2 --settings=settings"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
      - database
      - celery_retweet_worker
    working_dir: /code/src
  stream_3:
    env_file:
      - .env
    command: bash -c "python manage.py run_bot_stream $STREAM_3 --settings=settings"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
      - database
      - celery_retweet_worker
    working_dir: /code/src

  stream_4:
    env_file:
      - .env
    command: bash -c "python manage.py run_bot_stream $STREAM_4 --settings=settings"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
      - database
      - celery_retweet_worker
    working_dir: /code/src

  stream_5:
    env_file:
      - .env
    command: bash -c "python manage.py run_bot_stream $STREAM_5 --settings=settings"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
      - database
      - celery_retweet_worker
    working_dir: /code/src
  stream_6:
    env_file:
      - .env
    command: bash -c "python manage.py run_bot_stream $STREAM_6 --settings=settings"
    volumes:
      - ./src:/code/src
      - ${STATIC_ROOT}:${STATIC_ROOT}
      - ${MEDIA_ROOT}:${MEDIA_ROOT}
      - ${BOT_IMAGES_PATH}:${BOT_IMAGES_PATH}
      - ${celery_base_dir}:${celery_base_dir}
    depends_on:
      - redis
      - database
      - celery_retweet_worker
    working_dir: /code/src