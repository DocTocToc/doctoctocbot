{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "UserName.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import UserName from \"./UserName.svelte\"\n</script>\n\n<main>\n\t<h2>SocialUser</h2>\n    <UserName />\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: left;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n    import { onMount } from 'svelte';\n    import CreateSocialUser from \"./CreateSocialUser.svelte\"\n    import HealthCareProvider from \"./HealthCareProvider.svelte\"\n    let input = '';\n\tlet screenName = '';\n\tlet apiPath = \"/moderation/api/socialuser/\";\n\tlet screenNameValue = '';\n\tlet socialusers=null;\n\tlet humanId=0;\n\n\t$: {\n\t\tlet param = (new URL(document.location)).searchParams.get('screen_name');\n\t\tif ( param ) {\n\t\t\tconsole.log(param);\n\t\t\tsocialusers = fetchApi(param);\n\t\t\tscreenName = param;\n\t\t\tinput = param;\n\t\t}\n\t}\n\t\n\tfunction getScreenNameValue() {\n\t\treturn (new URL(document.location)).searchParams.get('screen_name')\n\t}\n\t\n\n    async function fetchApi(sn) {\n    \tlet url = apiPath + '?search=' + sn\n    \tconsole.log(url)\n\t    await fetch(url)\n\t      .then(r => r.json())\n\t      .then(data => {\n\t        console.log(data);\n\t        socialusers = data;\n\t      });\n\t    return socialusers;\n\t  };\n\n\tasync function onClickFetchApi(input) {\n\t\tif (input.startsWith('@')) {\n\t\t    screenName = input.slice(1);\t\n\t\t} else {\n\t\t\tscreenName = input;\n\t\t}\n\t    socialusers = await fetchApi(screenName)\n\t    }\n\n\t/*onMount(async () => {\n\t\tlet screenName = getScreenNameValue();\n\t\t\tif ( screenName ) {\n\t\t\t\tsocialusers = await fetchApi();\n\t\t\t}\n\t\t}\n    );*/\n</script>\n\n\n<form action=\"\" method=\"get\" on:submit|preventDefault={onClickFetchApi(input)}>\n<label for=\"screen_name\">Enter Twitter screen_name</label>\n<input type=\"text\" name=\"screen_name\" id=\"screen_name\" bind:value={input}>\n<button type=\"submit\" disabled={!input} on:click={onClickFetchApi(input)}>Fetch!</button>\n</form>\n\n  {#key socialusers}\n  {#if socialusers && socialusers.length == 0 && screenName}\n    <p>Utilisateur inconnu dans notre base de donnÃ©es.</p>\n    <CreateSocialUser bind:screenName/>\n  {:else if socialusers}\n    {#each socialusers as socialuser (socialuser.id) }\n    <div class=\"parent\">\n    <ul>\n      <li><img src=\"{socialuser.profile.biggeravatar}\" alt=\"user avatar\"/></li>\n      <li>SocialUser id: {socialuser.id}</li>\n      <li><a href=\"https://twitter.com/intent/user?user_id={socialuser.profile.json.id_str}\" target=\"_blank\">ðŸ”— Twitter profile</a></li>\n      <li>Twitter user id: {socialuser.user_id}</li>\n      <li>Twitter screen name: {socialuser.profile.json.screen_name}</li>\n      <li>Twitter name: {socialuser.profile.json.name}</li>\n      <li>category<ul>{#each socialuser.category as cat}<li>{cat.label}</li>{/each}</ul></li>\n      <li><a href=\"/admin/moderation/socialuser/{socialuser.id}/change/\" target=\"_blank\">ðŸ”— SocialUser admin</a>\n      <li>Health Care Provider <HealthCareProvider bind:humanId={socialuser.human[0].id}/></li>\n    </ul>\n    </div>\n    {/each}\n  {/if}\n  {/key}\n\t  \n<style>\n\t\tul { \n\t\t\ttext-align: left; \n\t\t\t}\n</style>"
  ],
  "names": [],
  "mappings": "AAUC,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;ACmEA,EAAE,cAAC,CAAC,AACH,UAAU,CAAE,IAAI,AAChB,CAAC"
}